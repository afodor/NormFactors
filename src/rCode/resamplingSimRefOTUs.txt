library("ecodist")
library("ape")

rm(list=ls())

setwd("G:\\BigDataScalingFactors\\risk\\dirk\\resample");

writeGraphs <- function( rawFilePath, normFilePath, outFileName )
{
	myT <- read.table(rawFilePath, sep="\t", header=TRUE,row.names=1)
	
	myT <- read.table(rawFilePath, sep="\t", header=TRUE,row.names=1, colClasses =rep("numeric", ncol(myT) )
		
	myTNorm <- read.table(normFilePath , sep="\t", header=TRUE, row.names=1, colClasses =rep("numeric", ncol(myT) )
	
	myDist <- bcdist(myT)
	myDistNorm <- bcdist(myTNorm)
	
	myPCOANorm <- pcoa(myDistNorm)
	
	rowSums <- apply(myT, 1, sum)

	countDist<- vector(length=length(rowSums)*(length(rowSums)-1)/2)

	x <- 1
	for( i in 1:(length(rowSums)-1) )
	{
		for( j in ( (i+1):length(rowSums)) )
		{
			countDist[x] <- abs( rowSums[i] - rowSums[j] )
			x = x + 1
		}
	}
	
	pdf(file = outFileName, width=6, height=6)
	#par(mfrow = c(4,2))
	
	rVal <- cor( myDist, countDist, method="spear" );
	title <- paste(paste( outFileName,  " raw r^2="), round( rVal * rVal ,digits=3))
	plot(myDist, countDist, main=title, xlab="BC Dist", ylab = "difference in number of sequences")
	
	rVal <- cor( myDistNorm, countDist, method="spear" );
	title <- paste(paste(outFileName, " norm r^2="), round( rVal * rVal ,digits=3))
	plot(myDistNorm, countDist, main=title, xlab="BC Dist", ylab = "difference in number of sequences")
	
	rVal <- cor( log10(rowSums), myPCOANorm$vectors[,1], method="spear" );
	title <- paste(paste(outFileName, "r^2="), round( rVal * rVal ,digits=3))
	plot(log10(rowSums), myPCOANorm$vectors[,1], xlab="log10(Number of Sequences)", ylab = "PCoA1", main=title)
	boxplot(myDist, myDistNorm)
	title(paste(outFileName, " distances vs. norm distances"))
	hist(myPCOANorm$vectors[,1],breaks=15)
	
	title <- paste(outFileName, " raw otu Mean Vs Varaiance " );
	plot( apply(myT, 2, mean) , apply(myT, 2, var), xlab ="mean", ylab="var", main=title  ) 
	
	title <- paste(outFileName, " norm otu Mean Vs Varaiance " );
	plot( apply(myTNorm, 2, mean) , apply(myTNorm, 2, var), xlab ="mean", ylab="var", main=title  ) 
	
	dev.off();			
}

writeGraphs("resampledcontinious_.txt", "resampledcontinious_rarified.txt", 
			"continiousToRarified.pdf")
			
writeGraphs("resampledcontinious_.txt", "resampledcontinious_relativeAbundance.txt", 
			"continiousToRelativeAbundance.pdf")
			

 